name: deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  DB_NAME: fefe-repo

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy:
    runs-on: ubuntu-latest
    container:
      image: archlinux:base-devel
    env:
      GHPAGE_DIR: ./repo-dir
      BUILD_DIR: ./x86_64/
    steps:
      - name: Download needed packages
        run: pacman -Syu --noconfirm pacman-contrib devtools
      
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: make chroot evironment
        run: |
          chgrp -R nobody "$BUILD_DIR"
          chmod -R g+ws "$BUILD_DIR"
          setfacl -m u::rwx,g::rwx "$BUILD_DIR"
          setfacl -d --set u::rwx,g::rwx,o::- "$BUILD_DIR"
      
      - name: build packages in "x86_64" directory
        run: |
          PKG_DIR="$(pwd)"
          readarray -t x86_list <<< "$(find x86_64/ -type f -name PKGBUILD | awk -F / '{print $2}')"
          echo " ### Building ${#x86_list[@]} packages. ### "
          for x in "${x86_list[@]}"; do
              cd x86_64/"${x}"
              echo -e "\n ### Making Package: ${x} ###"
          
              if [ $(find . -mindepth 1  -not -name PKGBUILD -not -name *.install | wc -l) -gt 0 ]; then

                  sources=$( find . -mindepth 1  -not -name PKGBUILD -not -name *.install )
                  echo -e "\n ### Moving source files of: ${x} ###"
                  for y in ${sources}; do
                      echo "Moving ${y} to x86_64/${x}"
                      mv "${y}" .
                  done

                  sudo -u nobody updpkgsums PKGBUILD || ( echo "ERROR: FAILED TO UPDATE CHECKSUMS OF PACKAGE: ${x}" && exit 1 )
              fi

              sudo -u nobody makepkg -cf || ( echo "ERROR: FAILED TO MAKE PACKAGE: ${x}" && exit 1 )

              cd $PKG_DIR
          done

      - name: Moving the packages into one DIR for publishing
        run: |
          mkdir $GHPAGE_DIR/
          mkdir $GHPAGE_DIR/x86_64/

          x86_pkgbuild=$(find x86_64/ -type f -name "*.pkg.tar.zst*")

          for x in ${x86_pkgbuild}; do
              echo "Moving ${x} to $GHPAGE_DIR/x86_64/"
              mv "${x}" $GHPAGE_DIR/x86_64/
          done
      
      - name: Build the repo database
        run: |
          cd $GHPAGE_DIR/x86_64
          ls -Al
          repo-add -s -n -R $DB_NAME.db.tar.gz *.pkg.tar.zst
      
      - name: Remove symlinks
        run: |
          cd $GHPAGE_DIR/x86_64
          ls -Al
          rm $DB_NAME.db
          if [ -d $DB_NAME.db.sig ]; then rm $DB_NAME.db.sig; fi
          rm $DB_NAME.files
          if [ -d $DB_NAME.files.sig ]; then rm $DB_NAME.files.sig; fi

          mv $DB_NAME.db.tar.gz $DB_NAME.db
          if [ -d $DB_NAME.db.tar.gz.sig ]; then mv $DB_NAME.db.tar.gz.sig $DB_NAME-db.sig; fi
          mv $DB_NAME.files.tar.gz $DB_NAME.files
          if [ -d $DB_NAME.files.tar.gz.sig ]; then mv $DB_NAME.files.tar.gz.sig $DB_NAME.files.sig; fi
          ls -Al

      - name: Deploy database
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ env.GHPAGE_DIR }}
          publish_branch: repo-db
